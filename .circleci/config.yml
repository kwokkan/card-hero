version: 2.1
parameters:
  configuration:
    type: string
    default: "Release"
  node-cache:
    type: string
    default: "apps/CardHero.NetCoreApp.TypeScript/.node-cache"
  node-project:
    type: string
    default: "apps/CardHero.NetCoreApp.TypeScript"
  solution:
    type: string
    default: "CardHero.sln"
orbs:
  win: circleci/windows@2.2.0
jobs:
  init-workspace:
    executor: win/default
    steps:
      - checkout:
          path: src
      - restore_cache:
          keys:
            - yarn-cache-{{ checksum "src/<< pipeline.parameters.node-project >>/yarn.lock" }}
            - yarn-cache-
      - persist_to_workspace:
          root: src
          paths:
            - src/*
  dotnet-publish:
    executor: win/default
    parameters:
      merge-request:
        type: env_var_name
        default: CIRCLE_PULL_REQUEST
    steps:
      - checkout
      - run:
          name: dotnet restore << pipeline.parameters.solution >>
          command: dotnet restore << pipeline.parameters.solution >>
      - run:
          name: dotnet build << pipeline.parameters.solution >> --configuration << pipeline.parameters.configuration >> --no-restore
          command: dotnet build << pipeline.parameters.solution >> --configuration << pipeline.parameters.configuration >> --no-restore
      - restore_cache:
          keys:
            - yarn-cache-{{ checksum "<< pipeline.parameters.node-project >>/yarn.lock" }}
            - yarn-cache-
      - run:
          name: npm build:prod
          command: |
            cd << pipeline.parameters.node-project >>
            yarn install --frozen-lockfile --cache-folder << pipeline.parameters.node-cache >>/yarn
            npm run build:prod
      - save_cache:
          key: yarn-cache-{{ checksum "<< pipeline.parameters.node-project >>/yarn.lock" }}
          paths:
            - << pipeline.parameters.node-cache >>/yarn
            - << pipeline.parameters.node-project >>/node_modules
      - unless:
          condition: << parameters.merge-request >>
          steps:
            - run:
                name: dotnet publish << pipeline.parameters.node-project >> --configuration << pipeline.parameters.configuration >> --no-build --output publish
                command: dotnet publish << pipeline.parameters.node-project >> --configuration << pipeline.parameters.configuration >> --no-build --output publish
            - store_artifacts:
                path: publish
  npm-lint:
    executor: win/default
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-cache-{{ checksum "<< pipeline.parameters.node-project >>/yarn.lock" }}
            - yarn-cache-
      - run:
          name: npm lint
          command: |
            cd << pipeline.parameters.node-project >>
            yarn install --frozen-lockfile --cache-folder .node-cache/yarn
            npm run lint
      - save_cache:
          key: yarn-cache-{{ checksum "<< pipeline.parameters.node-project >>/yarn.lock" }}
          paths:
            - << pipeline.parameters.node-cache >>/yarn
            - << pipeline.parameters.node-project >>/node_modules
  npm-test:
    executor: win/default
    steps:
      - attach_workspace:
          at: src
      - run:
          name: npm test
          command: |
            dir
            dir src
            cd src/<< pipeline.parameters.node-project >>
            yarn install --frozen-lockfile --cache-folder .node-cache/yarn
            npm run test
      - save_cache:
          key: yarn-cache-v2-{{ checksum "src/<< pipeline.parameters.node-project >>/yarn.lock" }}
          paths:
            - << pipeline.parameters.node-cache >>/yarn
            - << pipeline.parameters.node-project >>/node_modules
workflows:
  version: 2
  run-all:
    jobs:
      - init-workspace
      - dotnet-publish:
          requires:
            - init-workspace
      - npm-lint:
          requires:
             - init-workspace
      - npm-test:
          requires:
            - init-workspace
