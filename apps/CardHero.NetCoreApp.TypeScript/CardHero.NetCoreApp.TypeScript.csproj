<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <IsPackable>false</IsPackable>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <CodeAnalysisRuleSet>..\..\analyzers\stylecop.ruleset</CodeAnalysisRuleSet>
    <IncludeOpenAPIAnalyzers>true</IncludeOpenAPIAnalyzers>
    <UserSecretsId>271edc19-9986-45f1-b982-12947fca677c</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <DockerfileContext>..\..</DockerfileContext>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="..\..\analyzers\stylecop.json" Link="stylecop.json" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Authentication.OpenIdConnect" Version="7.0.0" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.17.0" />
    <PackageReference Include="Microsoft.VisualStudio.Threading.Analyzers" Version="17.4.27">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="7.0.1">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="NetEscapades.AspNetCore.SecurityHeaders" Version="0.17.0" />
    <PackageReference Include="NSwag.AspNetCore" Version="13.18.0" />
    <PackageReference Include="NSwag.MSBuild" Version="13.18.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="StyleCop.Analyzers" Version="1.1.118">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="WebMarkupMin.AspNetCore7" Version="2.13.4" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\src\CardHero.AspNetCore.Authentication.FileSystem\CardHero.AspNetCore.Authentication.FileSystem.csproj" />
    <ProjectReference Include="..\..\src\CardHero.Core.Abstractions\CardHero.Core.Abstractions.csproj" />
    <ProjectReference Include="..\..\src\CardHero.Core.Models\CardHero.Core.Models.csproj" />
    <ProjectReference Include="..\..\src\CardHero.Core.SqlServer\CardHero.Core.SqlServer.csproj" />
    <ProjectReference Include="..\..\src\CardHero.Data.PostgreSql\CardHero.Data.PostgreSql.csproj" />
    <ProjectReference Include="..\..\src\CardHero.Data.SqlServer\CardHero.Data.SqlServer.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Update="Dockerfile">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  
  <Target Name="NSwag" AfterTargets="Build" Condition="'$(DefineConstants.Contains(GENERATE))'">
    <Copy SourceFiles="@(Reference)" DestinationFolder="$(OutDir)References" />
    <Exec Command="$(NSwagExe_Net60) aspnetcore2openapi /assembly:$(TargetPath) /variables:Configuration=$(Configuration) /output:swagger.json" />
    <Exec Command="$(NSwagExe_Net60) openapi2tsclient /input:swagger.json /ClientBaseClass:CardHeroApiClientBase /ExtensionCode:&quot;import { CardHeroApiClientBase } from './CardHeroApiClientBase';&quot; /GenerateClientInterfaces:true /GenerateOptionalParameters:true /ImportRequiredTypes:true /MarkOptionalProperties:true /UseGetBaseUrlMethod:true /output:..\CardHero.Frontend.React\src\clients\clients.ts" />
    <RemoveDir Directories="$(OutDir)References" />
  </Target>
</Project>
