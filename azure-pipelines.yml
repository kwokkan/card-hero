# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'CardHero.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  CACHE_NUGET_VERSION: v1
  CACHE_YARN_VERSION: v1
  CACHE_KEY_P1: format('{0:yyyy}', pipeline.startTime)
  CACHE_KEY_P2: $[format('{0:MM}', pipeline.startTime)]
  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

steps:
- task: Cache@2
  inputs:
    key: 'nuget | "$(Agent.OS)" | "$(CACHE_NUGET_VERSION)" | "$(CACHE_KEY_P1)" | "$(CACHE_KEY_P2)" | **/*.csproj,!**/bin/**'
    restoreKeys: |
       nuget | "$(Agent.OS)" | "$(CACHE_NUGET_VERSION)" | "$(CACHE_KEY_P1)" | 12
       nuget | "$(Agent.OS)" | "$(CACHE_NUGET_VERSION)" | "$(CACHE_KEY_P1)" | 11
       nuget | "$(Agent.OS)" | "$(CACHE_NUGET_VERSION)" | "$(CACHE_KEY_P1)" | 10
       nuget | "$(Agent.OS)" | "$(CACHE_NUGET_VERSION)" | "$(CACHE_KEY_P1)" | 09
       nuget | "$(Agent.OS)" | "$(CACHE_NUGET_VERSION)" | "$(CACHE_KEY_P1)" | 08
       nuget | "$(Agent.OS)" | "$(CACHE_NUGET_VERSION)" | "$(CACHE_KEY_P1)" | 07
       nuget | "$(Agent.OS)" | "$(CACHE_NUGET_VERSION)" | "$(CACHE_KEY_P1)" | 06
       nuget | "$(Agent.OS)" | "$(CACHE_NUGET_VERSION)" | "$(CACHE_KEY_P1)" | 05
       nuget | "$(Agent.OS)" | "$(CACHE_NUGET_VERSION)" | "$(CACHE_KEY_P1)" | 04
       nuget | "$(Agent.OS)" | "$(CACHE_NUGET_VERSION)" | "$(CACHE_KEY_P1)" | 03
       nuget | "$(Agent.OS)" | "$(CACHE_NUGET_VERSION)" | "$(CACHE_KEY_P1)" | 02
       nuget | "$(Agent.OS)" | "$(CACHE_NUGET_VERSION)" | "$(CACHE_KEY_P1)" | 01
    path: $(NUGET_PACKAGES)
  displayName: Cache NuGet packages
  
- task: Cache@2
  inputs:
    key: 'yarn | "$(Agent.OS)" | "$(CACHE_YARN_VERSION)" | "$(CACHE_KEY_P1)" | "$(CACHE_KEY_P2)" | apps/CardHero.Frontend.React/yarn.lock'
    restoreKeys: |
       yarn | "$(Agent.OS)" | "$(CACHE_YARN_VERSION)" | "$(CACHE_KEY_P1)" | 12
       yarn | "$(Agent.OS)" | "$(CACHE_YARN_VERSION)" | "$(CACHE_KEY_P1)" | 11
       yarn | "$(Agent.OS)" | "$(CACHE_YARN_VERSION)" | "$(CACHE_KEY_P1)" | 10
       yarn | "$(Agent.OS)" | "$(CACHE_YARN_VERSION)" | "$(CACHE_KEY_P1)" | 09
       yarn | "$(Agent.OS)" | "$(CACHE_YARN_VERSION)" | "$(CACHE_KEY_P1)" | 08
       yarn | "$(Agent.OS)" | "$(CACHE_YARN_VERSION)" | "$(CACHE_KEY_P1)" | 07
       yarn | "$(Agent.OS)" | "$(CACHE_YARN_VERSION)" | "$(CACHE_KEY_P1)" | 06
       yarn | "$(Agent.OS)" | "$(CACHE_YARN_VERSION)" | "$(CACHE_KEY_P1)" | 05
       yarn | "$(Agent.OS)" | "$(CACHE_YARN_VERSION)" | "$(CACHE_KEY_P1)" | 04
       yarn | "$(Agent.OS)" | "$(CACHE_YARN_VERSION)" | "$(CACHE_KEY_P1)" | 03
       yarn | "$(Agent.OS)" | "$(CACHE_YARN_VERSION)" | "$(CACHE_KEY_P1)" | 02
       yarn | "$(Agent.OS)" | "$(CACHE_YARN_VERSION)" | "$(CACHE_KEY_P1)" | 01
    path: $(YARN_CACHE_FOLDER)
  displayName: Cache Yarn packages
  
- task: NuGetToolInstaller@1
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '5.x'
- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- script: yarn install --frozen-lockfile
  workingDirectory: apps/CardHero.Frontend.React

#- task: Npm@1
#  inputs:
#    command: 'install'
#    workingDir: 'apps/CardHero.Frontend.React'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'Azure DevOps SonarCloud Scan'
    organization: 'kwokkan'
    scannerMode: 'MSBuild'
    projectKey: 'kwokkan_card-hero'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    
- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'
